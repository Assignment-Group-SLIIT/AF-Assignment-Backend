{"version":3,"sources":["cosupervisorRequests.controller.js"],"names":["CoSupervisorRequest","require","createCoSupervisorRequest","req","res","groupId","email","researchTopic","researchField","coSupervisor","newCoSupervisorRequest","regeneratorRuntime","async","_context","prev","next","body","awrap","save","sent","abrupt","status","send","message","t0","stop","getAllRequestTopic","response","_context2","find","data","getAllRequestsofCoSupervisor","cosupervisor","_context3","params","name","json","_context4","id","findOne","updateCoSupervisorRequest","_context5","findOneAndUpdate","deleteCoSupervisorRequest","_context6","findOneAndDelete","console","log","supervisor","module","exports","getOneRequest"],"mappings":"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","file":"cosupervisorRequests.controller.min.js","sourcesContent":["const CoSupervisorRequest = require('../models/cosupervisorRequests.model');\r\n\r\n//create co-supervisor request\r\nconst createCoSupervisorRequest = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const email = req.body.email;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n    const coSupervisor = req.body.coSupervisor;\r\n\r\n    const newCoSupervisorRequest = new CoSupervisorRequest({\r\n        groupId,\r\n        email,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField\r\n    })\r\n\r\n    try {\r\n        let response = await newCoSupervisorRequest.save();\r\n        if (response) {\r\n            return res.status(201).send({ message: \"Register topic to co-supervisor\" })\r\n        } else {\r\n            return res.status(500).send({ message: \"Internal server error\" })\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'error while register topic' })\r\n    }\r\n\r\n}\r\n\r\n//get all request topic\r\nconst getAllRequestTopic = async (req, res) => {\r\n    try {\r\n        let response = await CoSupervisorRequest.find();\r\n        if (response) {\r\n            return res.status(200).send({ message: \"get all request topic\", data: response })\r\n        } else {\r\n            return res.status(500).send({ message: \"Internal server error\" })\r\n        }\r\n    } catch (error) {\r\n        return res.status(400).send({ message: \"error while getting request topic\" })\r\n    }\r\n}\r\n\r\n//get all co-supervisor request by name\r\nconst getAllRequestsofCoSupervisor = async (req, res) => {\r\n\r\n    const cosupervisor = req.params.name;\r\n\r\n    try {\r\n        let response = await CoSupervisorRequest\r\n        .find({supervisor: cosupervisor});\r\n        if (response) {\r\n            return res.json(response)\r\n        } else {\r\n            return res.status(404).send({ message: 'Error on retrieving request list of Co-supervisors' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\n//get one request\r\nconst getOneRequest = async (req, res) => {\r\n\r\n    const groupId = req.params.id;\r\n\r\n    try {\r\n        let response = await CoSupervisorRequest.findOne({ groupId: groupId });\r\n        if (response) {\r\n            return res.json(response)\r\n        } else {\r\n            return res.status(404).send({ message: 'No such request available' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\n//update request \r\nconst updateCoSupervisorRequest = async (req, res) => {\r\n\r\n    const groupId = req.params.id;\r\n\r\n    const updateCoSupervisorRequest = {\r\n         groupId  :req.body.groupId,\r\n         email : req.body.email,\r\n         researchTopic : req.body.researchTopic,\r\n         researchField : req.body.researchField,\r\n         coSupervisor : req.body.coSupervisor\r\n    }\r\n\r\n    try {\r\n        const response = await CoSupervisorRequest.findOneAndUpdate({ groupId: groupId }, updateCoSupervisorRequest)\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated Supervisor request' });\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\n//delete co suervisor request\r\nconst deleteCoSupervisorRequest = async (req, res) => {\r\n    const groupId = req.params.id;\r\n\r\n    try {\r\n        const response = await CoSupervisorRequest.findOneAndDelete({ groupId: groupId });\r\n        \r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully deleted a Request' });\r\n            \r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        return res.status(400).send({ message: 'Could not delete the request' })\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    createCoSupervisorRequest,\r\n    getAllRequestTopic,\r\n    getAllRequestsofCoSupervisor,\r\n    getOneRequest,\r\n    updateCoSupervisorRequest,\r\n    deleteCoSupervisorRequest\r\n}\r\n"]}