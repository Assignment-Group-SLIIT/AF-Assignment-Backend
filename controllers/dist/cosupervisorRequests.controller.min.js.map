{"version":3,"sources":["cosupervisorRequests.controller.js"],"names":["CoSupervisorRequest","require","req","res","groupId","email","researchTopic","researchField","coSupervisor","newCoSupervisorRequest","regeneratorRuntime","async","_context","prev","next","body","createCoSupervisorRequest","awrap","save","sent","abrupt","status","send","message","t0","stop","module","exports"],"mappings":"aAAA,IAAMA,oBAAsBC,QAAQ,wCAA9BD,0BAA8B,SAAAE,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAG1BV,EAAUF,EAAIa,KAAKX,QADvBY,EAAAA,EAAAA,KAAAA,MAA4BV,EAAAJ,EAAAa,KAAAT,cAAAC,EAAAL,EAAAa,KAAAR,cAAAC,EAAAN,EAAAa,KAAAP,aAAAC,EAAA,IAAAT,oBAAA,CACxBI,QAAAA,EACAC,MAAAA,EACAC,aAAAA,EACAC,cAAAA,EACHC,cAAAA,IAP6BI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAO,MAY5BT,EAHmDU,QATvB,KAAA,EAAA,GAAAN,EAAAO,KAAA,OAAAP,EAAAQ,OAAA,SAc5Bb,EAAAA,OAAAA,KAAAA,KAAAA,CAAAA,QAAAA,qCAd4BK,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAQ,OAAA,SAEFjB,EAAAkB,OAAA,KAAAC,KAAA,CAAAC,QAAA,2BAFE,KAAA,GAAAX,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,MAAA,GAAAA,EAAAQ,OAAA,SAyBrBjB,EAAIkB,OAAO,KAAKC,KAAK,CAACC,QAAS,gCAzBV,KAAA,GAAA,IAAA,MAAA,OAAAX,EAAAa,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAEFC,OAAAC,QAAA,CAAAX,0BAAAA","file":"cosupervisorRequests.controller.min.js","sourcesContent":["const CoSupervisorRequest = require('../models/cosupervisorRequests.model');\r\n\r\nconst createCoSupervisorRequest = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const email = req.body.email;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n\tconst coSupervisor = req.body.coSupervisor;\r\n    \r\n    const newCoSupervisorRequest = new CoSupervisorRequest({\r\n        groupId,\r\n        email,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField\r\n    })\r\n\r\n    try {\r\n        let response =  await newCoSupervisorRequest.save();\r\n        if(response) {\r\n            return res.status(201).send({message: \"Register topic to co-supervisor\"})\r\n        }else {\r\n            return res.status(500).send({message: \"Internal server error\"})\r\n        }\r\n    }catch(err) {\r\n        return res.status(400).send({message: 'error while register topic'})\r\n    }\r\n\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    createCoSupervisorRequest\r\n}\r\n"]}