{"version":3,"sources":["group.controller.js"],"names":["Group","require","createGroup","req","res","groupId","student","supervisor","coSupervisor","researchTopic","researchField","panelNo","newGroup","regeneratorRuntime","async","_context","prev","next","body","awrap","sent","abrupt","status","send","message","t0","stop","getAllGroup","response","_context2","find","data","removeGroup","_context3","params","id","findOneAndDelete","getOneGroup","_context4","findOne","json","updateGroup","findOneAndUpdate","module","exports"],"mappings":"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","file":"group.controller.min.js","sourcesContent":["const Group = require('../models/group.model');\r\n\r\n//register group with supervisors\r\nconst createGroup = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const student = req.body.student;\r\n    const supervisor = req.body.supervisor;\r\n\tconst coSupervisor = req.body.coSupervisor;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n    const panelNo = req.body.panelNo;\r\n        \r\n    const newGroup = new Group({\r\n        groupId,\r\n        student,\r\n        supervisor,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField,\r\n        panelNo\r\n    })\r\n\r\n    try {\r\n        let response =  await newGroup.save();\r\n        if(response) {\r\n            return res.status(201).send({message: \"new student group created\"})\r\n        }else {\r\n            return res.status(500).send({message: \"Internal server error\"})\r\n        }\r\n    }catch(err) {\r\n        return res.status(400).send({message: 'error while adding a group'})\r\n    }\r\n\r\n}\r\n\r\n//get all registered group \r\nconst getAllGroup = async(req , res) => {\r\n    try {\r\n        let response = await Group.find();\r\n        if(response){\r\n            return res.status(200).send({message:\"get all registered group\" , data:response})\r\n        }else{\r\n            return res.status(500).send({message:\"Internal server error\"})\r\n        }\r\n    }catch(error){\r\n        return res.status(400).send({message:\"error while getting all group\"})\r\n    }\r\n}\r\n\r\n//remove group\r\nconst removeGroup = async (req,res) => {\r\n    let groupId = req.params.id;\r\n    try {\r\n        const response = await Group.findOneAndDelete({ groupId: groupId });\r\n        if (response) {\r\n            return res.status(204).send({ message: 'Successfully deleted a Group' });\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Could not delete the Group' })\r\n    }\r\n}\r\n\r\n//get on group by group Id\r\nconst getOneGroup = async (req , res) => {\r\n    const groupId = req.params.id;\r\n    try {\r\n        let response = await Group.findOne({ groupId: groupId });\r\n        if (response) {\r\n            return res.json(response)\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(404).send({ message: 'No such request available' })\r\n    }\r\n}\r\n\r\n//update group details by group Id\r\nconst updateGroup = async (req, res) => {\r\n\r\n    const groupId = req.params.id;\r\n\r\n    const updateGroup = {\r\n     groupId : req.body.groupId,\r\n     student : req.body.student,\r\n     supervisor : req.body.supervisor,\r\n\t coSupervisor : req.body.coSupervisor,\r\n     researchTopic : req.body.researchTopic,\r\n     researchField : req.body.researchField,\r\n     panelNo : req.body.panelNo\r\n    }\r\n\r\n    try {\r\n        const response = await Group.findOneAndUpdate({ groupId: groupId }, updateGroup)\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated group request' });\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update group request' })\r\n    }\r\n\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    createGroup,\r\n    getAllGroup,\r\n    removeGroup,\r\n    getOneGroup,\r\n    updateGroup\r\n}\r\n"]}