{"version":3,"sources":["group.controller.js"],"names":["Group","require","req","res","groupId","student","supervisor","coSupervisor","researchTopic","researchField","panelNo","newGroup","regeneratorRuntime","async","_context","prev","next","body","createGroup","awrap","sent","abrupt","status","send","message","t0","stop","getAllGroup","response","_context2","find","data","removeGroup","gid","_context3","params","console","log","findOneAndDelete","id","then","err","getOneGroup","_context4","findOne","group","error"],"mappings":"aAAA,IAAMA,MAAQC,QAAQ,yBAAhBD,YAAgB,SAAAE,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAGZZ,EAAUF,EAAIe,KAAKb,QADvBc,EAAchB,EAAAe,KAAdC,QAAcZ,EAAAJ,EAAAe,KAAAX,WAAAC,EAAAL,EAAAe,KAAAV,aAAAC,EAAAN,EAAAe,KAAAT,cAAAC,EAAAP,EAAAe,KAAAR,cAAAC,EAAAR,EAAAe,KAAAP,QAEVL,EAAUH,IAAIe,MAAKZ,CACnBC,QAAAA,EACHC,QAAAA,EACGC,WAAAA,EACAC,aAAAA,EACAC,cAAAA,EAEAC,cAAAA,EACFP,QAAAA,IAZcU,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAAAJ,mBAAAO,MAgBdX,EAAAA,QAhBc,KAAA,GAAA,GAAAM,EAAAM,KAAA,OAAAN,EAAAO,OAAA,SAkBPlB,EAAPO,OAAAA,KAAAA,KAAAA,CAAAA,QAAAA,+BAlBcI,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAO,OAAA,SAEFlB,EAAAmB,OAAA,KAAAC,KAAA,CAAAC,QAAA,2BAFE,KAAA,GAAAV,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,MAAA,GAAAA,EAAAO,OAAA,SA6BPlB,EAAImB,OAAO,KAAKC,KAAK,CAACC,QAAS,gCA7BxB,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAEFC,YAAA,SAAAzB,EAAAC,GAAA,IAAAyB,EAAA,OAAAhB,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAb,MAAA,KAAA,EAAA,OAAAa,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAAAJ,mBAAAO,MAAAnB,MAAA8B,QAAA,KAAA,EAAA,GAAAF,EAAAC,EAAAT,KAAA,OAAAS,EAAAR,OAAA,SAAAlB,EAAAmB,OAAA,KAAAC,KAAA,CAAAC,QAsBGF,2BAAiBS,KAAAH,KAtBpBC,EAAAb,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAa,EAAAR,OAAA,SAAAlB,EAAAmB,OAAA,KAAAC,KAAA,CAAAC,QAAA,2BAAA,KAAA,EAAAK,EAAAb,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAa,EAAAd,KAAA,GAAAc,EAAAJ,GAAAI,EAAA,MAAA,GAAAA,EAAAR,OAAA,SAAAlB,EAAAmB,OAAA,KAAAC,KAAA,CAAAC,QAwBDrB,mCAxBC,KAAA,GAAA,IAAA,MAAA,OAAA0B,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAM,YAAA,SAAA9B,EAAAC,GAAA,IAAA8B,EAAA,OAAArB,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAAAiB,EAAA/B,EAAAiC,OAAA/B,QAAAgC,QAAAC,IAAAJ,GAAAC,EAAAlB,KAAA,EAAAJ,mBAAAO,MAgDVnB,MAAMsC,iBAAiB,CAAEC,GAAIN,IAhDnBO,KAAA,WAAA,OAAArC,EAAAmB,OAAA,KAAAC,KAAA,CAAAD,OAAA,4BAgDV,MAhDU,SAAAmB,GAAA,OAAAtC,EAAAmB,OAAA,KAAAC,KAAA,CAAAD,OA2BDA,wCA3BC,KAAA,EAAA,IAAA,MAAA,OAAAY,EAAAR,WAAAgB,YAAA,SAAAxC,EAAAC,GAAA,IAAA8B,EAAA,OAAArB,mBAAAC,MAAA,SAAA8B,GAAA,OAAA,OAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,KAAA,EAAA,OAAAiB,EAAA/B,EAAAiC,OAAA/B,QAAAgC,QAAAC,IAAAJ,GAAAU,EAAA3B,KAAA,EAAAJ,mBAAAO,MAAAnB,MAAA4C,QAAA,CAAAL,GAAAN,IAAAO,KAAA,SAAAK,GAAA,MAAAA,EAApB1C,EAAAmB,OAAA,KAAAC,KAAA,CAAAD,OAAA,8BAgCoBnB,EAAAmB,OAAA,KAAAC,KAAA,CAAAD,OAAA,yBAAAuB,MAAAA,MAhCA,MAgCA,WAAAT,QAAAC,IAAAI,IAAAjB,SAAArB,EAAAmB,OAAA,KAAAC,KAAA,CAAAD,OAAA,eAAAwB,MAAAL,IAAAjB,aAhCA,KAAA,EAAAmB,EAAAvB,KAAA,KAAA,EAAA,IAAA,MAAA,OAAAuB,EAAAjB,WAkCRE,OAAAA,QAAAA,CA0CRV,YAAAA,YA5CgBS,YAAAA,YAAAK,YAAAA,YAAAU,YAAAA","file":"group.controller.min.js","sourcesContent":["const Group = require('../models/group.model');\r\n\r\nconst createGroup = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const student = req.body.student;\r\n    const supervisor = req.body.supervisor;\r\n\tconst coSupervisor = req.body.coSupervisor;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n    const panelNo = req.body.panelNo;\r\n        \r\n    const newGroup = new Group({\r\n        groupId,\r\n        student,\r\n        supervisor,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField,\r\n        panelNo\r\n    })\r\n\r\n    try {\r\n        let response =  await newGroup.save();\r\n        if(response) {\r\n            return res.status(201).send({message: \"new student group created\"})\r\n        }else {\r\n            return res.status(500).send({message: \"Internal server error\"})\r\n        }\r\n    }catch(err) {\r\n        return res.status(400).send({message: 'error while adding a group'})\r\n    }\r\n\r\n}\r\n\r\nconst getAllGroup = async(req , res) => {\r\n    try {\r\n        let response = await Group.find();\r\n        if(response){\r\n            return res.status(200).send({message:\"get all registered group\" , data:response})\r\n        }else{\r\n            return res.status(500).send({message:\"Internal server error\"})\r\n        }\r\n    }catch(error){\r\n        return res.status(400).send({message:\"error while getting all group\"})\r\n    }\r\n}\r\n\r\nconst removeGroup = async (req,res) => {\r\n    let gid = req.params.groupId;\r\n    console.log(gid)\r\n    await Group.findOneAndDelete({ id: gid})\r\n        .then(() => {\r\n           return res.status(200).send({ status: \"student group deleted\" });\r\n        }).catch((err) => {\r\n           return  res.status(500).send({ status: \"Error with deleting group record\"});\r\n        })\r\n}\r\n\r\nconst getOneGroup = async (req , res) => {\r\n    let gid = req.params.groupId;\r\n    console.log(gid)\r\n    const group = await Group.findOne({ id: gid })\r\n    .then((group) => {\r\n        if (group == null) {\r\n            res.status(200).send({ status: \"No group Record Retrieved\" })\r\n        }\r\n        else {\r\n            res.status(200).send({ status: \"group Record Retrieved\", group: group })\r\n        }\r\n    }).catch(() => {\r\n        console.log(err.message);\r\n        res.status(500).send({ status: \"Server error\", error: err.message });\r\n    })\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    createGroup,\r\n    getAllGroup,\r\n    removeGroup,\r\n    getOneGroup\r\n}\r\n"]}