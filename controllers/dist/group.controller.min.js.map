{"version":3,"sources":["group.controller.js"],"names":["Group","require","req","res","groupId","student","supervisor","coSupervisor","researchTopic","researchField","panelNo","newGroup","regeneratorRuntime","async","_context","prev","next","body","createGroup","awrap","sent","abrupt","status","send","message","t0","stop","getAllGroup","response","_context2","find","data","removeGroup","gid","_context3","params","id","findOneAndDelete","then","err","getOneGroup","_context4","findOne","module","exports"],"mappings":"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","file":"group.controller.min.js","sourcesContent":["const Group = require('../models/group.model');\r\n\r\nconst createGroup = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const student = req.body.student;\r\n    const supervisor = req.body.supervisor;\r\n\tconst coSupervisor = req.body.coSupervisor;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n    const panelNo = req.body.panelNo;\r\n        \r\n    const newGroup = new Group({\r\n        groupId,\r\n        student,\r\n        supervisor,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField,\r\n        panelNo\r\n    })\r\n\r\n    try {\r\n        let response =  await newGroup.save();\r\n        if(response) {\r\n            return res.status(201).send({message: \"new student group created\"})\r\n        }else {\r\n            return res.status(500).send({message: \"Internal server error\"})\r\n        }\r\n    }catch(err) {\r\n        return res.status(400).send({message: 'error while adding a group'})\r\n    }\r\n\r\n}\r\n\r\nconst getAllGroup = async(req , res) => {\r\n    try {\r\n        let response = await Group.find();\r\n        if(response){\r\n            return res.status(200).send({message:\"get all registered group\" , data:response})\r\n        }else{\r\n            return res.status(500).send({message:\"Internal server error\"})\r\n        }\r\n    }catch(error){\r\n        return res.status(400).send({message:\"error while getting all group\"})\r\n    }\r\n}\r\n\r\nconst removeGroup = async (req,res) => {\r\n    let gid = req.params.id;\r\n    if (gid) {\r\n        const response = await Group.findOneAndDelete({ id: gid }).then(() => {\r\n            return res.status(200).send({ status: \"Group deleted successfully\" });\r\n        }).catch((err) => {\r\n            return res.status(500).send({ message: \"Internal Server Error\" });\r\n        })\r\n    }\r\n    return res.status(400).send({ message: \"Invalid Request\" });\r\n\r\n}\r\n\r\nconst getOneGroup = async (req , res) => {\r\n    let gid = req.params.id;\r\n    if (gid) {\r\n        const response = await Group.findOne({ id: gid }).then(() => {\r\n            return res.status(200).send({ status: \"Successfully retrieve group\" });\r\n        }).catch((err) => {\r\n            return res.status(500).send({ message: \"Internal Server Error\" });\r\n        })\r\n    }\r\n    return res.status(400).send({ message: \"Invalid Request\" });\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    createGroup,\r\n    getAllGroup,\r\n    removeGroup,\r\n    getOneGroup\r\n}\r\n"]}