"use strict";var Group=require("../models/group.model"),createGroup=function(r,t){var n,s,u,a,o,p,c,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body.groupId,s=r.body.student,u=r.body.supervisor,a=r.body.coSupervisor,o=r.body.researchTopic,p=r.body.researchField,c=r.body.panelNo,d=new Group({groupId:n,student:s,supervisor:u,coSupervisor:a,researchTopic:o,researchField:p,panelNo:c}),e.prev=8,e.next=11,regeneratorRuntime.awrap(d.save());case 11:if(e.sent)return e.abrupt("return",t.status(201).send({message:"new student group created"}));e.next=16;break;case 16:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 17:e.next=22;break;case 19:return e.prev=19,e.t0=e.catch(8),e.abrupt("return",t.status(400).send({message:"error while adding a group"}));case 22:case"end":return e.stop()}},null,null,[[8,19]])},getAllGroup=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Group.find());case 3:if(t=e.sent)return e.abrupt("return",r.status(200).send({message:"get all registered group",data:t}));e.next=8;break;case 8:return e.abrupt("return",r.status(500).send({message:"Internal server error"}));case 9:e.next=14;break;case 11:return e.prev=11,e.t0=e.catch(0),e.abrupt("return",r.status(400).send({message:"error while getting all group"}));case 14:case"end":return e.stop()}},null,null,[[0,11]])},removeGroup=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,e.prev=1,e.next=4,regeneratorRuntime.awrap(Group.findOneAndDelete({groupId:n}));case 4:if(e.sent)return e.abrupt("return",t.status(204).send({message:"Successfully deleted a Group"}));e.next=9;break;case 9:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 10:e.next=15;break;case 12:return e.prev=12,e.t0=e.catch(1),e.abrupt("return",t.status(400).send({message:"Could not delete the Group"}));case 15:case"end":return e.stop()}},null,null,[[1,12]])},getOneGroup=function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,e.prev=1,e.next=4,regeneratorRuntime.awrap(Group.findOne({groupId:n}));case 4:if(s=e.sent)return e.abrupt("return",t.json(s));e.next=9;break;case 9:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 10:e.next=15;break;case 12:return e.prev=12,e.t0=e.catch(1),e.abrupt("return",t.status(404).send({message:"No such request available"}));case 15:case"end":return e.stop()}},null,null,[[1,12]])},updateGroup=function(r,t){var n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.id,s={groupId:r.body.groupId,student:r.body.student,supervisor:r.body.supervisor,coSupervisor:r.body.coSupervisor,researchTopic:r.body.researchTopic,researchField:r.body.researchField,panelNo:r.body.panelNo},e.prev=2,e.next=5,regeneratorRuntime.awrap(Group.findOneAndUpdate({groupId:n},s));case 5:if(e.sent)return e.abrupt("return",t.status(200).send({message:"Successfully updated group request"}));e.next=10;break;case 10:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 11:e.next=16;break;case 13:return e.prev=13,e.t0=e.catch(2),e.abrupt("return",t.status(400).send({message:"Unable to update group request"}));case 16:case"end":return e.stop()}},null,null,[[2,13]])};module.exports={createGroup:createGroup,getAllGroup:getAllGroup,removeGroup:removeGroup,getOneGroup:getOneGroup,updateGroup:updateGroup};
//# sourceMappingURL=group.controller.min.js.map
