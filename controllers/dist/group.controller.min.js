"use strict";var Group=require("../models/group.model"),createGroup=function(r,t){var n,s,u,a,o,c,p,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.body.groupId,s=r.body.student,u=r.body.supervisor,a=r.body.coSupervisor,o=r.body.researchTopic,c=r.body.researchField,p=r.body.panelNo,d=new Group({groupId:n,student:s,supervisor:u,coSupervisor:a,researchTopic:o,researchField:c,panelNo:p}),e.prev=8,e.next=11,regeneratorRuntime.awrap(d.save());case 11:if(e.sent)return e.abrupt("return",t.status(201).send({message:"new student group created"}));e.next=16;break;case 16:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 17:e.next=22;break;case 19:return e.prev=19,e.t0=e.catch(8),e.abrupt("return",t.status(400).send({message:"error while adding a group"}));case 22:case"end":return e.stop()}},null,null,[[8,19]])},getAllGroup=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Group.find());case 3:if(t=e.sent)return e.abrupt("return",r.status(200).send({message:"get all registered group",data:t}));e.next=8;break;case 8:return e.abrupt("return",r.status(500).send({message:"Internal server error"}));case 9:e.next=14;break;case 11:return e.prev=11,e.t0=e.catch(0),e.abrupt("return",r.status(400).send({message:"error while getting all group"}));case 14:case"end":return e.stop()}},null,null,[[0,11]])},removeGroup=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.groupId,console.log(n),e.next=4,regeneratorRuntime.awrap(Group.findOneAndDelete({id:n}).then(function(){return t.status(200).send({status:"student group deleted"})}).catch(function(e){return t.status(500).send({status:"Error with deleting group record"})}));case 4:case"end":return e.stop()}})},getOneGroup=function(r,t){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.params.groupId,console.log(n),e.next=4,regeneratorRuntime.awrap(Group.findOne({id:n}).then(function(e){null==e?t.status(200).send({status:"No group Record Retrieved"}):t.status(200).send({status:"group Record Retrieved",group:e})}).catch(function(){console.log(err.message),t.status(500).send({status:"Server error",error:err.message})}));case 4:e.sent;case 5:case"end":return e.stop()}})};module.exports={createGroup:createGroup,getAllGroup:getAllGroup,removeGroup:removeGroup,getOneGroup:getOneGroup};
//# sourceMappingURL=group.controller.min.js.map
