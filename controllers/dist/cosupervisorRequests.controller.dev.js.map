{"version":3,"sources":["cosupervisorRequests.controller.js"],"names":["CoSupervisorRequest","require","createCoSupervisorRequest","req","res","groupId","body","email","researchTopic","researchField","coSupervisor","newCoSupervisorRequest","save","response","status","send","message","getAllRequestTopic","find","data","getAllRequestsofCoSupervisor","cosupervisor","params","name","supervisor","json","getOneRequest","id","findOne","updateCoSupervisorRequest","findOneAndUpdate","deleteCoSupervisorRequest","Group","findOneAndDelete","module","exports"],"mappings":"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","sourcesContent":["const CoSupervisorRequest = require('../models/cosupervisorRequests.model');\r\n\r\nconst createCoSupervisorRequest = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const email = req.body.email;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n    const coSupervisor = req.body.coSupervisor;\r\n\r\n    const newCoSupervisorRequest = new CoSupervisorRequest({\r\n        groupId,\r\n        email,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField\r\n    })\r\n\r\n    try {\r\n        let response = await newCoSupervisorRequest.save();\r\n        if (response) {\r\n            return res.status(201).send({ message: \"Register topic to co-supervisor\" })\r\n        } else {\r\n            return res.status(500).send({ message: \"Internal server error\" })\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'error while register topic' })\r\n    }\r\n\r\n}\r\n\r\nconst getAllRequestTopic = async (req, res) => {\r\n    try {\r\n        let response = await CoSupervisorRequest.find();\r\n        if (response) {\r\n            return res.status(200).send({ message: \"get all request topic\", data: response })\r\n        } else {\r\n            return res.status(500).send({ message: \"Internal server error\" })\r\n        }\r\n    } catch (error) {\r\n        return res.status(400).send({ message: \"error while getting request topic\" })\r\n    }\r\n}\r\n\r\nconst getAllRequestsofCoSupervisor = async (req, res) => {\r\n\r\n    const cosupervisor = req.params.name;\r\n\r\n    try {\r\n        let response = await CoSupervisorRequest\r\n        .find({supervisor: cosupervisor});\r\n        if (response) {\r\n            return res.json(response)\r\n        } else {\r\n            return res.status(404).send({ message: 'Error on retrieving request list of Co-supervisors' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\n\r\nconst getOneRequest = async (req, res) => {\r\n\r\n    const groupId = req.params.id;\r\n\r\n    try {\r\n        let response = await CoSupervisorRequest.findOne({ groupId: groupId });\r\n        if (response) {\r\n            return res.json(response)\r\n        } else {\r\n            return res.status(404).send({ message: 'No such request available' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(500).send({ message: 'Internal Server Error' })\r\n    }\r\n}\r\n\r\nconst updateCoSupervisorRequest = async (req, res) => {\r\n\r\n    const groupId = req.params.id;\r\n\r\n    const updateCoSupervisorRequest = {\r\n         groupId  :req.body.groupId,\r\n         email : req.body.email,\r\n         researchTopic : req.body.researchTopic,\r\n         researchField : req.body.researchField,\r\n         coSupervisor : req.body.coSupervisor\r\n    }\r\n\r\n    try {\r\n        const response = await CoSupervisorRequest.findOneAndUpdate({ groupId: groupId }, updateCoSupervisorRequest)\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated Supervisor request' });\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update' })\r\n    }\r\n\r\n}\r\n\r\nconst deleteCoSupervisorRequest = async (req, res) => {\r\n    const groupId = req.params.id;\r\n\r\n    try {\r\n        const response = await Group.findOneAndDelete({ groupId: groupId });\r\n        \r\n        if (response) {\r\n            return res.status(204).send({ message: 'Successfully deleted a Request' });\r\n            \r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Could not delete the request' })\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = {\r\n    createCoSupervisorRequest,\r\n    getAllRequestTopic,\r\n    getAllRequestsofCoSupervisor,\r\n    getOneRequest,\r\n    updateCoSupervisorRequest,\r\n    deleteCoSupervisorRequest\r\n}\r\n"],"file":"cosupervisorRequests.controller.dev.js"}