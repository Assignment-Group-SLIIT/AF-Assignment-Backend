{"version":3,"sources":["group.controller.js"],"names":["Group","require","createGroup","req","res","groupId","body","student","supervisor","coSupervisor","researchTopic","researchField","panelNo","newGroup","save","response","status","send","message","getAllGroup","find","data","removeGroup","params","id","findOneAndDelete","getOneGroup","findOne","json","updateGroup","findOneAndUpdate","module","exports"],"mappings":"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","sourcesContent":["const Group = require('../models/group.model');\r\n\r\n//register group with supervisors\r\nconst createGroup = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const student = req.body.student;\r\n    const supervisor = req.body.supervisor;\r\n\tconst coSupervisor = req.body.coSupervisor;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n    const panelNo = req.body.panelNo;\r\n        \r\n    const newGroup = new Group({\r\n        groupId,\r\n        student,\r\n        supervisor,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField,\r\n        panelNo\r\n    })\r\n\r\n    try {\r\n        let response =  await newGroup.save();\r\n        if(response) {\r\n            return res.status(201).send({message: \"new student group created\"})\r\n        }else {\r\n            return res.status(500).send({message: \"Internal server error\"})\r\n        }\r\n    }catch(err) {\r\n        return res.status(400).send({message: 'error while adding a group'})\r\n    }\r\n\r\n}\r\n\r\n//get all registered group \r\nconst getAllGroup = async(req , res) => {\r\n    try {\r\n        let response = await Group.find();\r\n        if(response){\r\n            return res.status(200).send({message:\"get all registered group\" , data:response})\r\n        }else{\r\n            return res.status(500).send({message:\"Internal server error\"})\r\n        }\r\n    }catch(error){\r\n        return res.status(400).send({message:\"error while getting all group\"})\r\n    }\r\n}\r\n\r\n//remove group\r\nconst removeGroup = async (req,res) => {\r\n    let groupId = req.params.id;\r\n    try {\r\n        const response = await Group.findOneAndDelete({ groupId: groupId });\r\n        if (response) {\r\n            return res.status(204).send({ message: 'Successfully deleted a Group' });\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Could not delete the Group' })\r\n    }\r\n}\r\n\r\n//get on group by group Id\r\nconst getOneGroup = async (req , res) => {\r\n    const groupId = req.params.id;\r\n    try {\r\n        let response = await Group.findOne({ groupId: groupId });\r\n        if (response) {\r\n            return res.json(response)\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(404).send({ message: 'No such request available' })\r\n    }\r\n}\r\n\r\n//update group details by group Id\r\nconst updateGroup = async (req, res) => {\r\n\r\n    const groupId = req.params.id;\r\n\r\n    const updateGroup = {\r\n     groupId : req.body.groupId,\r\n     student : req.body.student,\r\n     supervisor : req.body.supervisor,\r\n\t coSupervisor : req.body.coSupervisor,\r\n     researchTopic : req.body.researchTopic,\r\n     researchField : req.body.researchField,\r\n     panelNo : req.body.panelNo\r\n    }\r\n\r\n    try {\r\n        const response = await Group.findOneAndUpdate({ groupId: groupId }, updateGroup)\r\n        if (response) {\r\n            return res.status(200).send({ message: 'Successfully updated group request' });\r\n        } else {\r\n            return res.status(500).send({ message: 'Internal server error' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(400).send({ message: 'Unable to update group request' })\r\n    }\r\n\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    createGroup,\r\n    getAllGroup,\r\n    removeGroup,\r\n    getOneGroup,\r\n    updateGroup\r\n}\r\n"],"file":"group.controller.dev.js"}