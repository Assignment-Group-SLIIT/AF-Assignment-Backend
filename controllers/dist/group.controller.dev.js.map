{"version":3,"sources":["group.controller.js"],"names":["Group","require","createGroup","req","res","groupId","body","student","supervisor","coSupervisor","researchTopic","researchField","panelNo","newGroup","save","response","status","send","message","getAllGroup","find","data","removeGroup","gid","params","console","log","findOneAndDelete","id","then","err","getOneGroup","findOne","group","error","module","exports"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,UAAAA,OADU,GACAF,GAAG,CAACG,IAAJ,CAASD,OADT;AAEVE,UAAAA,OAFU,GAEAJ,GAAG,CAACG,IAAJ,CAASC,OAFT;AAGVC,UAAAA,UAHU,GAGGL,GAAG,CAACG,IAAJ,CAASE,UAHZ;AAIbC,UAAAA,YAJa,GAIEN,GAAG,CAACG,IAAJ,CAASG,YAJX;AAKVC,UAAAA,aALU,GAKMP,GAAG,CAACG,IAAJ,CAASI,aALf;AAMVC,UAAAA,aANU,GAMMR,GAAG,CAACG,IAAJ,CAASK,aANf;AAOVC,UAAAA,OAPU,GAOAT,GAAG,CAACG,IAAJ,CAASM,OAPT;AASVC,UAAAA,QATU,GASC,IAAIb,KAAJ,CAAU;AACvBK,YAAAA,OAAO,EAAPA,OADuB;AAEvBE,YAAAA,OAAO,EAAPA,OAFuB;AAGvBC,YAAAA,UAAU,EAAVA,UAHuB;AAIvBC,YAAAA,YAAY,EAAZA,YAJuB;AAKvBC,YAAAA,aAAa,EAAbA,aALuB;AAMvBC,YAAAA,aAAa,EAAbA,aANuB;AAOvBC,YAAAA,OAAO,EAAPA;AAPuB,WAAV,CATD;AAAA;AAAA;AAAA,0CAoBUC,QAAQ,CAACC,IAAT,EApBV;;AAAA;AAoBRC,UAAAA,QApBQ;;AAAA,eAqBTA,QArBS;AAAA;AAAA;AAAA;;AAAA,2CAsBDX,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAE;AAAV,WAArB,CAtBC;;AAAA;AAAA,2CAwBDd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAE;AAAV,WAArB,CAxBC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CA2BLd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAE;AAAV,WAArB,CA3BK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAgCA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAMhB,GAAN,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAESJ,KAAK,CAACoB,IAAN,EAFT;;AAAA;AAERL,UAAAA,QAFQ;;AAAA,eAGTA,QAHS;AAAA;AAAA;AAAA;;AAAA,4CAIDX,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAC,0BAAT;AAAsCG,YAAAA,IAAI,EAACN;AAA3C,WAArB,CAJC;;AAAA;AAAA,4CAMDX,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAC;AAAT,WAArB,CANC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CASLd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,YAAAA,OAAO,EAAC;AAAT,WAArB,CATK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAaA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAOnB,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACZmB,UAAAA,GADY,GACNpB,GAAG,CAACqB,MAAJ,CAAWnB,OADL;AAEhBoB,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAFgB;AAAA,0CAGVvB,KAAK,CAAC2B,gBAAN,CAAuB;AAAEC,YAAAA,EAAE,EAAEL;AAAN,WAAvB,EACDM,IADC,CACI,YAAM;AACT,mBAAOzB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,cAAAA,MAAM,EAAE;AAAV,aAArB,CAAP;AACF,WAHC,WAGO,UAACc,GAAD,EAAS;AACf,mBAAQ1B,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,cAAAA,MAAM,EAAE;AAAV,aAArB,CAAR;AACF,WALC,CAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAWA,IAAMe,WAAW,GAAG,SAAdA,WAAc,CAAO5B,GAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACZmB,UAAAA,GADY,GACNpB,GAAG,CAACqB,MAAJ,CAAWnB,OADL;AAEhBoB,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAFgB;AAAA,0CAGIvB,KAAK,CAACgC,OAAN,CAAc;AAAEJ,YAAAA,EAAE,EAAEL;AAAN,WAAd,EACnBM,IADmB,CACd,UAACI,KAAD,EAAW;AACb,gBAAIA,KAAK,IAAI,IAAb,EAAmB;AACf7B,cAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE;AAAV,eAArB;AACH,aAFD,MAGK;AACDZ,cAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,gBAAAA,MAAM,EAAE,wBAAV;AAAoCiB,gBAAAA,KAAK,EAAEA;AAA3C,eAArB;AACH;AACJ,WARmB,WAQX,YAAM;AACXR,YAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACZ,OAAhB;AACAd,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,cAAAA,MAAM,EAAE,cAAV;AAA0BkB,cAAAA,KAAK,EAAEJ,GAAG,CAACZ;AAArC,aAArB;AACH,WAXmB,CAHJ;;AAAA;AAGVe,UAAAA,KAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAmBAE,MAAM,CAACC,OAAP,GAAiB;AACblC,EAAAA,WAAW,EAAXA,WADa;AAEbiB,EAAAA,WAAW,EAAXA,WAFa;AAGbG,EAAAA,WAAW,EAAXA,WAHa;AAIbS,EAAAA,WAAW,EAAXA;AAJa,CAAjB","sourcesContent":["const Group = require('../models/group.model');\r\n\r\nconst createGroup = async (req, res) => {\r\n    const groupId = req.body.groupId;\r\n    const student = req.body.student;\r\n    const supervisor = req.body.supervisor;\r\n\tconst coSupervisor = req.body.coSupervisor;\r\n    const researchTopic = req.body.researchTopic;\r\n    const researchField = req.body.researchField;\r\n    const panelNo = req.body.panelNo;\r\n        \r\n    const newGroup = new Group({\r\n        groupId,\r\n        student,\r\n        supervisor,\r\n        coSupervisor,\r\n        researchTopic,\r\n        researchField,\r\n        panelNo\r\n    })\r\n\r\n    try {\r\n        let response =  await newGroup.save();\r\n        if(response) {\r\n            return res.status(201).send({message: \"new student group created\"})\r\n        }else {\r\n            return res.status(500).send({message: \"Internal server error\"})\r\n        }\r\n    }catch(err) {\r\n        return res.status(400).send({message: 'error while adding a group'})\r\n    }\r\n\r\n}\r\n\r\nconst getAllGroup = async(req , res) => {\r\n    try {\r\n        let response = await Group.find();\r\n        if(response){\r\n            return res.status(200).send({message:\"get all registered group\" , data:response})\r\n        }else{\r\n            return res.status(500).send({message:\"Internal server error\"})\r\n        }\r\n    }catch(error){\r\n        return res.status(400).send({message:\"error while getting all group\"})\r\n    }\r\n}\r\n\r\nconst removeGroup = async (req,res) => {\r\n    let gid = req.params.groupId;\r\n    console.log(gid)\r\n    await Group.findOneAndDelete({ id: gid})\r\n        .then(() => {\r\n           return res.status(200).send({ status: \"student group deleted\" });\r\n        }).catch((err) => {\r\n           return  res.status(500).send({ status: \"Error with deleting group record\"});\r\n        })\r\n}\r\n\r\nconst getOneGroup = async (req , res) => {\r\n    let gid = req.params.groupId;\r\n    console.log(gid)\r\n    const group = await Group.findOne({ id: gid })\r\n    .then((group) => {\r\n        if (group == null) {\r\n            res.status(200).send({ status: \"No group Record Retrieved\" })\r\n        }\r\n        else {\r\n            res.status(200).send({ status: \"group Record Retrieved\", group: group })\r\n        }\r\n    }).catch(() => {\r\n        console.log(err.message);\r\n        res.status(500).send({ status: \"Server error\", error: err.message });\r\n    })\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    createGroup,\r\n    getAllGroup,\r\n    removeGroup,\r\n    getOneGroup\r\n}\r\n"],"file":"group.controller.dev.js"}